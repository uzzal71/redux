++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
এসাইনমেন্ট রিকুয়ারমেন্ট:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
এই মডিউলে আমরা জানলাম RTK Query কি, কিভাবে কাজ করে এবং আমাদের কি কি সমস্যার সমাধান করে দেয়। সেই সাথে মডিউল 6 এ দেখানো একটি প্রজেক্টে আমরা RTK Query Implement করলাম। এবার আপনাদেরও ঠিক একই কাজ করতে হবে। আপনারা মডিউল 4 এর এসাইনমেন্ট এ React-Redux দিয়ে একটি Bookstore Application এর এসাইনমেন্ট করেছিলেন। এবার সেই প্রজেক্টে আপনাদেরকে RTK Query Implement করতে হবে।

এই এসাইনমেন্টের জন্যে HTML template দিয়ে দেয়া হয়েছে repository এর 'html' ফোল্ডারে, সেটিকে React এ কনভার্ট করে নিতে হবে। সেই সাথে একটি JSON Server ও দিয়ে দেয়া হয়েছে রিপোসিটরির 'server' ফোল্ডারে। সেখানে কিছু বই এর লিস্টও তৈরি করাই থাকবে। কোনো অবস্থাতেই API server এর পোর্ট বা End Point পরিবর্তন করা যাবে না। এসাইনমেন্ট শেষে, JSON Server হোস্ট করার কোনো প্রয়োজন নেই। শুধু মাত্র Frontend টুকু হোষ্ট করে দিলেই চলবে। Frontend হোস্ট করার পরে ঠিক মতো কাজ করছে কিনা তা চেক করার জন্য আপনি আপনার মেশিনে localhost এ সার্ভার চালিয়ে রেখে চেক করতে পারবেন deployed frontend প্রোজক্টটি চেক করে দেখতে পারবেন।

উল্লেখ্য যে, এসাইনমেন্ট এর ডিজাইনে কোন ধরনের পরিবর্তন করা যাবে না এবং HTML template এ দেয়া কোনো বাটন বা এলিমেন্ট এর Class, Id, Name প্রোপার্টি পরিবর্তন করা যাবে না। সেই Class, Id, Name প্রোপার্টি দিয়েই আপনাকে এসাইনমেন্টটি সম্পন্ন করতে হবে। অন্যথায় এসাইনমেন্ট এর কোনো মার্ক নাও পেতে পারেন।

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
এই এসাইনমেন্ট এ যা যা করতে হবেঃ
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
এসাইনমেন্ট 4 এ যা যা করা হয়েছিলো, ঠিক সেগুলোই করতে হবে। তবে এখানে RTK Query ব্যবহার করে API কল করে করতে হবে।

✓ পেজ লোড হলেই, সার্ভার থেকে বই এর লিস্ট গুলো নিয়ে এসে দেখাবে

✓ 'Add Book পেজে' বই এর তথ্য দিয়ে সাবমিট করলে সেগুলো সার্ভারে গিয়ে সেভ হবে। অবশ্যই RTK Query এর Mutation কুয়েরি ব্যবহার করে করতে হবে এবং এড হলে 'Add' পেজ থেকে Home পেজে চলে আসবে।

✓ 'Book List' - এর ডানে 'All', 'Featured' নামে দুটি ট্যাগ আছে, 'Featured' সিলেক্ট করলে featured বই গুলো শুধু ফিল্টার করে দেখাবে। 'All' দিলে সব গুলোই দেখাবে। এটি ক্লাইন্ট সাইডেই করতে হবে।

✓ নেভিগেশন মেনুতে 'Search Bar' - আছে, সেখানে সার্চ করলে, শুধু মাত্র বই এর নাম দিয়ে সার্চ করবে এবং সার্চ রেজাল্ট 'Book List' সেকশনেই ফিল্টার হয়ে দেখাবে। সার্চ বার ফাঁকা থাকলে, স্বভাবিক ভাবে যেমন সব বই গুলো দেখায়, সেভাবেই দেখাবে।

✓ কার্ড আইটেমের 'Edit' আইকনে ক্লিক করলে এডিটের একটি পেজে নিয়ে যাবে। এর জন্যে React Router ব্যবহার করতে হবে এবং এডিট পেজে গেলে, সেই বইটির তথ্য দিয়ে ফর্ম টা আগে থেকেই পূরন করা থাকবে। এখন এই ফর্ম এর কোনো ডেটা আপডেট করলে সেটি সার্ভার এও আপডেট হয়ে যাবে এবং আপডেট হলে এডিট পেজ থেকে হোম পেজে চলে আসবে।

✓ সব শেষে ডিলেট বাটনে ক্লিক করলে, বইটি সার্ভার থেকেও ডিলেট হয়ে যাবে